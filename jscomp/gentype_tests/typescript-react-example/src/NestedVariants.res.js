// Generated by ReScript, PLEASE EDIT WITH CARE


function makeVariant(param) {
  return {
          TAG: "NonUnary",
          _0: 5,
          _1: 3
        };
}

function makeABC(param) {
  return {
          TAG: "A",
          _0: {
            c: {
              TAG: "C",
              _0: "a string"
            }
          },
          _1: 5
        };
}

function makeBC(param) {
  return {
          c: {
            TAG: "C",
            _0: "a string"
          }
        };
}

function makeAC(param) {
  return {
          TAG: "A",
          _0: {
            TAG: "C",
            _0: "a string"
          },
          _1: 5
        };
}

function makeAD(param) {
  return {
          TAG: "A",
          _0: {
            TAG: "Int",
            _0: 3
          },
          _1: 5
        };
}

function makeAE(param) {
  return {
          TAG: "A",
          _0: 3,
          _1: 5
        };
}

function makeFD(param) {
  return {
          TAG: "F",
          _0: {
            TAG: "Int",
            _0: 3
          }
        };
}

function makeHD(param) {
  return {
          TAG: "H",
          _0: {
            TAG: "Int",
            _0: 5
          },
          _1: 5
        };
}

function makeJ(param) {
  return {
          TAG: "J",
          _0: {
            TAG: "Int",
            _0: 5
          },
          _1: {
            TAG: "Int",
            _0: 3
          }
        };
}

function makeK(param) {
  return {
          TAG: "K",
          _0: [
            {
              TAG: "Int",
              _0: 5
            },
            {
              TAG: "Int",
              _0: 3
            }
          ]
        };
}

function testBoxedBinary(param) {
  return 34;
}

function testUnboxedBinary(param) {
  return 34;
}

function testInline(x) {
  switch (x.TAG) {
    case "I" :
        return {
                TAG: "I",
                i: x.i,
                j: x.j
              };
    case "J" :
        return x;
    case "K" :
        return {
                TAG: "K",
                _0: x._1,
                _1: x._0
              };
    case "L" :
        return {
                TAG: "L",
                _0: x._0
              };
    
  }
}

export {
  makeVariant ,
  makeABC ,
  makeBC ,
  makeAC ,
  makeAD ,
  makeAE ,
  makeFD ,
  makeHD ,
  makeJ ,
  makeK ,
  testBoxedBinary ,
  testUnboxedBinary ,
  testInline ,
}
/* No side effect */
