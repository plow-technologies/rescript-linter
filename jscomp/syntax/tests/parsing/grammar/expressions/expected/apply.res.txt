;;foo (fun _ -> bla) blaz
;;foo (fun _ -> bla) blaz
;;foo ((Function$ (fun _ -> bla))[@res.arity 1]) blaz
;;foo (fun _ -> bla) (fun _ -> blaz)
;;List.map (fun x -> x + 1) myList
;;List.reduce (fun acc -> fun curr -> acc + curr) 0 myList
let unitUncurried = ((apply ())[@res.uapp ])
;;call ~a:(((((a)[@res.namedArgLoc ]) : int))[@res.namedArgLoc ])