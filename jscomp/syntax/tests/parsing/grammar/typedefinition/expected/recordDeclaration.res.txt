type nonrec t = {
  x: int }
type nonrec t = {
  mutable x: int }
type nonrec t = {
  x: int }
type nonrec t = {
  mutable x: int }
type nonrec t = {
  x: int ;
  y: int }
type nonrec t = {
  mutable x: int ;
  mutable y: int }
type nonrec t = {
  x: int ;
  y: int }
type nonrec t = {
  mutable x: int ;
  mutable y: int }
type nonrec t = {
  x: 'a 'b . polyType }
type nonrec t = {
  x: int [@attr ];
  y: int [@attr2 ]}
type nonrec t =
  {
  x: ((int)[@onInt ]) [@rowAttr ];
  y: ((int)[@onInt ]) [@rowAttr2 ]}
type nonrec t = {
  form: form }
type nonrec t = {
  mutable form: form }
type nonrec t = {
  form: form ;
  answers: answers }
type nonrec t = {
  mutable form: form ;
  mutable answers: answers }
type nonrec t = < age: int   > 
type nonrec t = < .. > 
type nonrec t = < age: int   > 
type nonrec t = < age: int   ;.. > 
type nonrec t = < age: int  ;name: string   ;.. > 
type nonrec t = < age: int [@attr ]  ;.. > 
type nonrec t = < age: int [@attr ]  ;.. > 
type nonrec t = < age: int [@attr ] ;name: string [@attr ]  ;.. > 
type nonrec t = < age: int [@attr ]  > 
type nonrec t = < age: int [@attr ]  > 
type nonrec t = < age: int [@attr ] ;name: string   > 
type nonrec t = < age: int [@attr ] ;name: string [@attr2 ]  > 
type nonrec domProps =
  {
  label: string [@bs.optional ];
  list: string [@bs.optional ];
  loop: bool [@bs.optional ]}