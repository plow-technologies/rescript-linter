
  Syntax error!
  tests/parsing/errors/typexpr/objectSpread.res:5:16-18

  3 │ type u = private {...a, u: int}
  4 │ 
  5 │ type x = Type({...a, u: int})
  6 │ 
  7 │ type u = {...a, "u": int, v: int}

  A record type declaration doesn't support the ... spread. Only an object (with quoted field names) does.


  Syntax error!
  tests/parsing/errors/typexpr/objectSpread.res:9:14

   7 │ type u = {...a, "u": int, v: int}
   8 │ 
   9 │ let f = (x: {a: int, b: int}) => ()
  10 │ 

  An inline record type declaration is only allowed in a variant constructor's declaration

type nonrec u = {
  ...: a ;
  u: int }
type nonrec u = private {
  ...: a ;
  u: int }
type nonrec x =
  | Type of < a ;u: int   >  
type nonrec u = < a ;u: int  ;v: int   > 
let f (x : < a: int  ;b: int   > ) = ()